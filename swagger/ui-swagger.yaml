openapi: 3.1.0
info:
  title: NEW UMFT SITE FRONTEND API
  description: Staff position codelari 
    Kafedra mudirlari uchun - 16,
    Bo'lim boshliqlari - 17,
    Rektor - 20,
    Ilmiy Prorektor - 233,
    Xalqaro hamkorlik bo'yicha prorektor - 32
  version: 1.0.0
servers:
  - url: http://95.130.227.52:4131
    description: Production server
  - url: http://localhost:4131
    description: Local development server


paths:
  ##Category
  /front/category:
    get:
      summary: Getting category for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      responses:
        "200": # status code
          description: Getting matches model for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Category

  /front/category/{slug}:
    get:
      summary: Getting category for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Category

  ## News
  /front/news:
    get:
      summary: Getting news for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
        - in: query
          name: category
          schema:
            type: array
            items:
              type: string

      responses:
        "200": # status code
          description: Getting news for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - News

  /front/news/{slug}:
    get:
      summary: Getting news for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one news for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - News

  ## Partner
  /front/partner:
    get:
      summary: Getting partners for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      responses:
        "200": # status code
          description: Getting partners for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Partner

  /front/partner/{slug}:
    get:
      summary: Getting partner for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one partner for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Partner

  ## Social
  /front/social:
    get:
      summary: Getting socials for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
        - in: query
          name: messenger
          schema:
            type: array
            properties:
              type: string
      responses:
        "200": # status code
          description: Getting partners for frontend
          content:
            application/json:
              schema:
                type: object



      tags:
        - Social

  /front/social/{slug}:
    get:
      summary: Getting social for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Social

  ## Messenger
  /front/messenger:
    get:
      summary: Getting messenger for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
        - in: query
          name: messenger
          schema:
            type: array
            properties:
              type: string
      responses:
        "200": # status code
          description: Getting partners for frontend
          content:
            application/json:
              schema:
                type: object



      tags:
        - Messenger

  /front/messenger/{slug}:
    get:
      summary: Getting social for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Messenger

  ## Events
  /front/events:
    get:
      summary: Getting events for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
        - in: query
          name: eventsCategory
          schema:
            type: array
            properties:
              type: string


      responses:
        "200": # status code
          description: Getting matches model for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Events

  /front/events/{slug}:
    get:
      summary: Getting events for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Events

  ## EventsCategory
  /front/eventsCategory:
    get:
      summary: Getting eventsCategory for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      responses:
        "200": # status code
          description: Getting matches model for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - EventsCategory

  /front/eventsCategory/{slug}:
    get:
      summary: Getting eventsCategory for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - EventsCategory

  ## Licence
  /front/licence:
    get:
      summary: Getting licence for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      responses:
        "200": # status code
          description: Getting matches modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Licence

  /front/licence/{slug}:
    get:
      summary: Getting licence for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Licence

  ## Employee
  /front/employee:
    get:
      summary: Getting employee for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
        - in: query
          name: staffPosition

      responses:
        "200": # status code
          description: Getting matches modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Employee

  /front/employee/{slug}:
    get:
      summary: Getting employee for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Employee

#  ## Specialty
#  /front/specialty:
#    get:
#      summary: Getting specialty for frontend
#      description: You can filter which you want.
#      parameters:
#        - in: query
#          name: language
#        - in: query
#          name: limit
#          schema:
#            type: string
#          required: false
#        - in: query
#          name: page
#          schema:
#            type: string
#          required: false
#        - in: query
#          name: select
#          schema:
#            type: string
#          required: false
#        - in: query
#          name: department
#          schema:
#            type: string
#          required: false
#        - in: query
#          name: degree
#          schema:
#            type: string
#          required: false
#        - in: query
#          name: format
#          schema:
#            type: string
#          required: false
#      responses:
#        "200": # status code
#          description: Getting matches modelData for frontend
#          content:
#            application/json:
#              schema:
#                type: object
#
#      tags:
#        - Specialty
#
#  /front/specialty/{slug}:
#    get:
#      summary: Getting specialty for frontend
#      description: You can filter which you want.
#      parameters:
#        - in: path
#          name: slug
#      responses:
#        "200": # status code
#          description: Getting one modelData for frontend
#          content:
#            application/json:
#              schema:
#                type: object
#
#      tags:
#        - Specialty

  ## Format
  /front/format:
    get:
      summary: Getting format for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      responses:
        "200": # status code
          description: Getting matches modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Format

  /front/format/{slug}:
    get:
      summary: Getting format for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Format

  ## Department
  /front/department:
    get:
      summary: Getting department for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      responses:
        "200": # status code
          description: Getting matches modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Department

  /front/department/{slug}:
    get:
      summary: Getting department for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Department

  ## Degree
  /front/degree:
    get:
      summary: Getting degree for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      responses:
        "200": # status code
          description: Getting matches modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Degree

  /front/degree/{slug}:
    get:
      summary: Getting degree for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Degree


  ## Specialty
  /front/specialty:
    get:
      summary: Getting specialties for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
        - in: query
          name: department
          schema:
            type: string
          required: false
        - in: query
          name: degree
          schema:
            type: string
          required: false
        - in: query
          name: format
        - in: query
          name: structureType
          description: Bu department uchun structureType code bo'ladi masalan (11)
          schema:
            type: string
          required: false

      responses:
        "200": # status code
          description: Getting matches modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Specialty

  /front/specialty/{slug}:
    get:
      summary: Getting specialty for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Specialty


  ## Page
  /front/page:
    get:
      summary: Getting page based data for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false

      responses:
        "200": # status code
          description: Getting matches page based data for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Page

  /front/page/{slug}:
    get:
      summary: Getting page based data for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting page based data for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Page

  ##PhotoAlbumCategory
  /front/photoAlbumCategory:
    get:
      summary: Getting photoAlbumCategory for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      responses:
        "200": # status code
          description: Getting matches model for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - PhotoAlbumCategory

  /front/photoAlbumCategory/{slug}:
    get:
      summary: Getting photoAlbumCategory for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - PhotoAlbumCategory

    ## PhotoAlbum
  /front/photoAlbum:
      get:
        summary: Getting photoAlbums for frontend
        description: You can filter which you want.
        parameters:
          - in: query
            name: language
          - in: query
            name: limit
            schema:
              type: string
            required: false
          - in: query
            name: page
            schema:
              type: string
            required: false
          - in: query
            name: select
            schema:
              type: string
            required: false
          - in: query
            name: photoAlbumCategory
            schema:
              type: array
              items:
                type: string

        responses:
          "200": # status code
            description: Getting photoAlbums for frontend
            content:
              application/json:
                schema:
                  type: object

        tags:
          - PhotoAlbum

  /front/photoAlbum/{slug}:
    get:
      summary: Getting photoAlbums for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one photoAlbums for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - PhotoAlbum

  ##VideoAlbumCategory
  /front/videoAlbumCategory:
    get:
      summary: Getting videoAlbumCategory for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      responses:
        "200": # status code
          description: Getting matches model for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - VideoAlbumCategory

  /front/videoAlbumCategory/{slug}:
    get:
      summary: Getting videoAlbumCategory for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - VideoAlbumCategory

    ## VideoAlbum
  /front/videoAlbum:
      get:
        summary: Getting videoAlbums for frontend
        description: You can filter which you want.
        parameters:
          - in: query
            name: language
          - in: query
            name: limit
            schema:
              type: string
            required: false
          - in: query
            name: page
            schema:
              type: string
            required: false
          - in: query
            name: select
            schema:
              type: string
            required: false
          - in: query
            name: videoAlbumCategory
            schema:
              type: array
              items:
                type: string

        responses:
          "200":
            description: Getting videoAlbums for frontend
            content:
              application/json:
                schema:
                  type: object

        tags:
          - VideoAlbum

  /front/videoAlbum/{slug}:
    get:
      summary: Getting videoAlbums for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one videoAlbums for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - VideoAlbum